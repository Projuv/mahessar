/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package datamahasiswa;
import javax.swing.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.table.DefaultTableModel; // Untuk DefaultTableModel
import java.sql.Connection; // Untuk Connection
import java.sql.PreparedStatement; // Untuk PreparedStatement
import java.sql.ResultSet; // Untuk ResultSet
import java.sql.SQLException; // Untuk SQLException
import javax.swing.JOptionPane; // Untuk JOptionPane
import java.sql.DriverManager; // Untuk DriverManager

import dao.mahasiswaDAO;
import model.Mahasiswa;


public class ViewMahasiswa extends javax.swing.JFrame {
    private Connection connection;

    // Metode untuk mendapatkan ID yang dipilih dari tabel
        private int getSelectedIdFromTable() {
            int selectedRow = tabel_mahasiswa.getSelectedRow(); // jTable1 adalah nama variabel tabel Anda

            if (selectedRow == -1) {
                JOptionPane.showMessageDialog(this, "Pilih data di tabel terlebih dahulu!", "Error", JOptionPane.ERROR_MESSAGE);
                return -1;
            }

            // Ambil nilai dari kolom pertama
            Object value = tabel_mahasiswa.getValueAt(selectedRow, 0);

            // Periksa apakah nilai dapat dikonversi menjadi integer
            if (value != null && value instanceof Number) {
                int selectedId = ((Number) value).intValue();
                System.out.println("ID yang dipilih: " + selectedId);  // Log ID untuk debugging
                return selectedId;
            } else {
                JOptionPane.showMessageDialog(this, "ID tidak valid!", "Error", JOptionPane.ERROR_MESSAGE);
                return -1;
            }
        }
    
    ControllerMahasiswa mhs = new ControllerMahasiswa();
    public ViewMahasiswa() {
        initComponents();
        connectToDatabase();
        
    tampilkanDataKeTabel();
    }

private void connectToDatabase() {
        try {
        String url = "jdbc:mysql://localhost:3306/db_inventori"; // Ganti dengan nama database Anda
        String user = "root"; // Ganti dengan username database Anda
        String password = ""; // Ganti dengan password database Anda
            // Inisialisasi koneksi
            connection = DriverManager.getConnection(url, user, password);
            System.out.println("Koneksi ke database berhasil!");
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Koneksi ke database gagal: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }

    }

    // Jangan lupa untuk menutup koneksi saat aplikasi ditutup
    protected void finalize() throws Throwable {
        if (connection != null && !connection.isClosed()) {
            connection.close();
        }
        super.finalize();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        input_tinggi = new javax.swing.JTextField();
        input_nama = new javax.swing.JTextField();
        input_npm = new javax.swing.JTextField();
        select_pindahan = new javax.swing.JComboBox<>();
        simpan = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabel_mahasiswa = new javax.swing.JTable();
        btn_hapus = new javax.swing.JButton();
        btn_edit = new javax.swing.JButton();
        btn_set = new javax.swing.JButton();
        btn_clear = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Data Mahasiswa");

        jLabel2.setText("NPM");

        jLabel3.setText("Nama");

        jLabel4.setText("Tinggi");

        jLabel5.setText("Pindahan ?");

        input_tinggi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                input_tinggiActionPerformed(evt);
            }
        });

        input_nama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                input_namaActionPerformed(evt);
            }
        });

        input_npm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                input_npmActionPerformed(evt);
            }
        });

        select_pindahan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ya", "Tidak", " " }));
        select_pindahan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                select_pindahanActionPerformed(evt);
            }
        });

        simpan.setText("Simpan");
        simpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simpanActionPerformed(evt);
            }
        });

        tabel_mahasiswa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "NPM", "Nama", "Tinggi", "Pindah"
            }
        ));
        jScrollPane1.setViewportView(tabel_mahasiswa);
        tabel_mahasiswa.getAccessibleContext().setAccessibleParent(simpan);

        btn_hapus.setText("Hapus Data");
        btn_hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_hapusActionPerformed(evt);
            }
        });

        btn_edit.setText("Edit");
        btn_edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_editActionPerformed(evt);
            }
        });

        btn_set.setText("Set");
        btn_set.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_setActionPerformed(evt);
            }
        });

        btn_clear.setText("Clear");
        btn_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_clearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(input_npm, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(input_nama, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(select_pindahan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(input_tinggi, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(200, 200, 200)
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(106, 106, 106))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(114, 114, 114)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(152, 152, 152)
                        .addComponent(btn_edit)
                        .addGap(34, 34, 34)
                        .addComponent(simpan)
                        .addGap(26, 26, 26)
                        .addComponent(btn_hapus)
                        .addGap(18, 18, 18)
                        .addComponent(btn_set)
                        .addGap(18, 18, 18)
                        .addComponent(btn_clear)))
                .addContainerGap(204, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(input_npm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(input_nama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(input_tinggi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(select_pindahan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_edit)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(simpan)
                        .addComponent(btn_hapus)
                        .addComponent(btn_set)
                        .addComponent(btn_clear)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void input_npmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_input_npmActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_input_npmActionPerformed

    private void input_namaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_input_namaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_input_namaActionPerformed

    private void simpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simpanActionPerformed
      // Ambil data dari form
    String npm = input_npm.getText();
    String nama = input_nama.getText();
    int tinggi = Integer.parseInt(input_tinggi.getText());
    String pindahan = select_pindahan.getSelectedItem().toString();

    // Buat objek Mahasiswa dan simpan ke database menggunakan MahasiswaDAO
    Mahasiswa mahasiswa = new Mahasiswa();
    mahasiswa.setNpm(npm);
    mahasiswa.setNama(nama);
    mahasiswa.setTinggi(tinggi);
    mahasiswa.setPindahan(pindahan);

    mahasiswaDAO mahasiswaDAO = new mahasiswaDAO();
    mahasiswaDAO.saveMahasiswa(mahasiswa);

    JOptionPane.showMessageDialog(null, "Data mahasiswa berhasil disimpan!", "Sukses", JOptionPane.INFORMATION_MESSAGE);
    tampilkanDataKeTabel(); // Panggil metode untuk menampilkan data setelah berhasil disimpan
    }//GEN-LAST:event_simpanActionPerformed

    private void tampilkanDataKeTabel() {
    DefaultTableModel model = (DefaultTableModel) tabel_mahasiswa.getModel();
    model.setRowCount(0); // Hapus semua data di tabel terlebih dahulu

    String sql = "SELECT * FROM mahasiswa";

    try {
        PreparedStatement pstmt = connection.prepareStatement(sql);
        ResultSet rs = pstmt.executeQuery();

        while (rs.next()) {
            Object[] row = {
                rs.getInt("id"),
                rs.getString("npm"),
                rs.getString("nama"),
                rs.getInt("tinggi"),
                rs.getString("pindahan")
            };
            model.addRow(row);
        }

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Gagal menampilkan data: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }}

    
    
    private void input_tinggiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_input_tinggiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_input_tinggiActionPerformed

    private void select_pindahanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_select_pindahanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_select_pindahanActionPerformed

    private void btn_editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_editActionPerformed
        // Ambil ID dari data yang dipilih di tabel
    int selectedRow = tabel_mahasiswa.getSelectedRow();
    
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(null, "Pilih baris yang valid untuk diedit", "Peringatan", JOptionPane.WARNING_MESSAGE);
        return;
    }

    // Ambil ID mahasiswa dari kolom pertama di baris yang dipilih
    int selectedId = Integer.parseInt(tabel_mahasiswa.getValueAt(selectedRow, 0).toString());

    // Ambil data dari form
    String npm = input_npm.getText();
    String nama = input_nama.getText();
    int tinggi = Integer.parseInt(input_tinggi.getText());
    String pindahan = select_pindahan.getSelectedItem().toString();

    // Update data di database menggunakan MahasiswaDAO
    mahasiswaDAO mahasiswaDAO = new mahasiswaDAO();
    mahasiswaDAO.updateMahasiswa(selectedId, npm, nama, tinggi, pindahan);

    JOptionPane.showMessageDialog(null, "Data mahasiswa berhasil diperbarui!", "Sukses", JOptionPane.INFORMATION_MESSAGE);
    tampilkanDataKeTabel(); // TODO add your handling code here:
    }//GEN-LAST:event_btn_editActionPerformed

    private void btn_hapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_hapusActionPerformed
        int selectedRow = tabel_mahasiswa.getSelectedRow();
    
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(null, "Pilih baris yang valid untuk dihapus", "Peringatan", JOptionPane.WARNING_MESSAGE);
        return;
    }
    
    int selectedId = Integer.parseInt(tabel_mahasiswa.getValueAt(selectedRow, 0).toString());

    mahasiswaDAO mahasiswaDAO = new mahasiswaDAO();
    mahasiswaDAO.deleteMahasiswa(selectedId);

    JOptionPane.showMessageDialog(null, "Data mahasiswa berhasil dihapus!", "Sukses", JOptionPane.INFORMATION_MESSAGE);
    tampilkanDataKeTabel(); // TODO add your handling code here:
    }//GEN-LAST:event_btn_hapusActionPerformed

    private void btn_setActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_setActionPerformed
      // Ambil data dari baris yang dipilih di tabel
    int selectedRow = tabel_mahasiswa.getSelectedRow(); // Ambil baris yang dipilih
    if (selectedRow != -1) { // Pastikan ada baris yang dipilih
        try {
            // Ambil data dari kolom yang sesuai
            input_npm.setText(tabel_mahasiswa.getValueAt(selectedRow, 1).toString());  // Kolom 1 untuk npm
            input_nama.setText(tabel_mahasiswa.getValueAt(selectedRow, 2).toString());  // Kolom 2 untuk nama
            input_tinggi.setText(tabel_mahasiswa.getValueAt(selectedRow, 3).toString()); // Kolom 3 untuk tinggi
            select_pindahan.setSelectedItem(tabel_mahasiswa.getValueAt(selectedRow, 4).toString()); // Kolom 4 untuk pindahan

            // Dapatkan ID dari tabel untuk update
            int id = Integer.parseInt(tabel_mahasiswa.getValueAt(selectedRow, 0).toString()); // Kolom 0 untuk ID

            // Panggil updateMahasiswa dari DAO untuk memperbarui data
            mahasiswaDAO dao = new mahasiswaDAO();
            dao.updateMahasiswa(id, input_npm.getText(), input_nama.getText(), 
                    Integer.parseInt(input_tinggi.getText()), select_pindahan.getSelectedItem().toString());

            // Refresh tabel atau UI jika diperlukan
            JOptionPane.showMessageDialog(this, "Data berhasil diperbarui.");
        } catch (NumberFormatException e) {
            // Tangani error jika data yang diambil tidak bisa diubah ke tipe data yang sesuai
            JOptionPane.showMessageDialog(this, "Data yang diambil tidak valid. Pastikan data dalam format yang benar.");
        }
    } else {
        // Tampilkan pesan jika tidak ada baris yang dipilih
        JOptionPane.showMessageDialog(this, "Silakan pilih data dari tabel.");
    }
    }//GEN-LAST:event_btn_setActionPerformed

    private void btn_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_clearActionPerformed
         // Mengosongkan JTextField input_npm dan input_nama
        input_npm.setText("");  
        input_nama.setText("");  
        
        // Mengosongkan JTextField input_tinggi, pastikan mengatur ulang input ke kosong
        input_tinggi.setText(""); 
        
        // Mengatur ulang JComboBox select_pindahan ke item pertama (atau item default)
        select_pindahan.setSelectedIndex(0);  // 0 adalah indeks item pertama pada JComboBox// TODO add your handling code here:
    }//GEN-LAST:event_btn_clearActionPerformed
    

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewMahasiswa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewMahasiswa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewMahasiswa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewMahasiswa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewMahasiswa().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_clear;
    private javax.swing.JButton btn_edit;
    private javax.swing.JButton btn_hapus;
    private javax.swing.JButton btn_set;
    private javax.swing.JTextField input_nama;
    private javax.swing.JTextField input_npm;
    private javax.swing.JTextField input_tinggi;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> select_pindahan;
    private javax.swing.JButton simpan;
    private javax.swing.JTable tabel_mahasiswa;
    // End of variables declaration//GEN-END:variables
}
